using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AbstractHW
{
    public abstract class Shape
    {
        public string Type { get; }

        public abstract int CalculateArea();
    }

    public class Circle : Shape
    {
        double Radius;

        public Circle(double r)
        {
            Radius = r;
        }

        public override int CalculateArea()
        {
            int Area = Convert.ToInt32((Math.PI) * Radius * Radius);
            return Area;
        }

        public override bool Equals(object obj)
        {
            if (obj is Circle)
            {
                var objClass = (Circle)obj;
                return this.Type == objClass.Type &&
                       this.CalculateArea() == objClass.CalculateArea();
            }
            return false;
        }
        
        public override string ToString()
        {

            string x = "The Radius is" + Radius;
            return x;
        } 
    }

    public class Rectangle : Shape
    {
        private int l;
        private int w;

        public Rectangle(int l, int w)
        {
            this.l = l;
            this.w = w;
        }

        public override int CalculateArea()
        {
            int AreaR;
            AreaR = l * w;
            return AreaR;
        }

        public override bool Equals(object obj)
        {
            if (obj is Rectangle)
            {
                var objClass = (Rectangle)obj;
                return this.Type == objClass.Type &&
                       this.CalculateArea() == objClass.CalculateArea();
            }
            return false;
        }

        public override string ToString()
        {
            
            string x = "The Lenth is" + l;
            x += "\nThe Width is " + w;
            return x;
        }
    }
}

